
client:
  keystorePathValidCerts: "HasToBeDefined_keystorePathValidCerts"                          # Absolute or relative path to valid key store end-entity files in p12 format for the tests.
  keystorePathAlternativeCerts: "HasToBeDefined_keystorePathAlternativeCerts"              # Absolute or relative path to valid key store end-entity files of an alternative CA in p12 format for the tests.
  keystorePathInvalidCerts: "HasToBeDefined_keystorePathInvalidCerts"                      # Absolute or relative path to invalid key store end-entity files in p12 format for the tests.
  keystorePassword: "00"                                                                   # Password used for all p12 key store files of the test certificates.

testObject:
  name: "HasToBeDefined_name"                                                              # Name of the test object, for better identification in logs and configuration files.
  type: "HasToBeDefined_type"                                                              # Test object type (TlsServer|Script|ScriptOverSsh).
  ipAddressOrFqdn: "HasToBeDefined_ipAddressOrFqdn"                                        # FQDN or IP address to connect to the test object.
  port: HasToBeDefined_port                                                                # Port where the test object listens on.
  scriptPath: "unused by default"                                                          # Absolute or relative path to the use case script when test object type is set to 'Script'.

  sshConfig:
    username: "HasToBeDefined_username"                                                    # TODO
    password: "HasToBeDefined_password"                                                    # TODO
    host: "HasToBeDefined_host"                                                            # TODO
    port: 22                                                                               # TODO
    privateKey: "HasToBeDefined_privateKey"                                                # TODO
    privateKeyPassphrase: "HasToBeDefined_privateKeyPassphrase"                            # TODO
    appDataHttpFwdSocket: "HasToBeDefined_appDataHttpFwdSocket"                            # send AppData over http-forwarder (to gematik OCSP-sim, as defined in bash script)
    cryptMethod: "ECC"                                                                     # RSA or ECC
    filesToCopyRootDir: "HasToBeDefined_filesToCopyRootDir"                                # TODO
    filesToCopyPattern: "HasToBeDefined_filesToCopyPattern"                                # TODO see https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getPathMatcher-java.lang.String-
    remoteTargetDir: "HasToBeDefined_remoteTargetDir"                                      # TODO
    remoteLogFile: "HasToBeDefined_remoteLogFile"                                          # TODO
    connectTimeoutSeconds: 4                                                               # TODO
    authTimeoutSeconds: 4                                                                  # TODO
    channelOpenTimeoutSeconds: 4                                                           # TODO
    channelCloseTimeoutSeconds: 4                                                          # TODO
  ocspGracePeriodSeconds: 30                                                               # OCSP grace period in seconds configured in the test object.
  tslDownloadIntervalSeconds: HasToBeDefined_tslDownloadIntervalSeconds                    # TSL download interval in seconds configured in the test object.
  tslProcessingTimeSeconds: 3                                                              # Amount of seconds to wait after a TSL update for processing inside the test object.
  ocspTimeoutSeconds: 10                                                                   # Amount of seconds after OCSP responses are not accepted by the test object anymore.

ocspResponder:
  ipAddressOrFqdn: "HasToBeDefined_ipAddressOrFqdn"                                        # FQDN or IP address where the OCSP responder is running. This will be used as the ServiceSupplyPoint in the TSLs.
  port: HasToBeDefined_port                                                                # Port where the OCSP responder is listening.
  id: "OCSP Responder"                                                                     # Name of the OCSP responder for better identification in log files.
  appPath: "./bin/pkits-ocsp-responder-exec.jar"                                           # Path to the OCSP responder jar which should be started during tests. This can be skipped with the keyword "externalStartup".

tslProvider:
  ipAddressOrFqdn: "HasToBeDefined_ipAddressOrFqdn"                                        # FQDN or IP address where the tsl provider is running. This will be used as the PointersToOther field in the TSLs.
  port: HasToBeDefined_port                                                                # Port where the TSL provider is listening.
  id: "TSL Provider"                                                                       # Name of the TSL provider for better identification in log files.
  appPath: "./bin/pkits-tsl-provider-exec.jar"                                             # Path to the TSL provider jar which should be started during tests. This can be skipped with the keyword "externalStartup".

testSuiteParameter:
  performInitialState: true                                                                # Execute smoke test (TSL and use case including OCSP) before each test.
  captureNetworkTraffic: false                                                             # Capture network traffic in pcap file format. Configuration of interfaces to sniff on is done by parameter "captureInterfaces" If OCSP responder and TSL provider are not started externally, sniffing on there interfaces is activated as well.
  captureInterfaces: "HasToBeDefined_captureInterfaces"                                    # Comma separated list of IP addresses for interfaces to sniff communication with the test object from.

  ocspSettings:
    keystorePathOcsp: "./testDataTemplates/certificates/ecc/ocspKeystore"                  # Absolute or relative path to key store files in p12 format to sign OCSP requests. with.
    signerPassword: "00"                                                                   # Password used for the OCSP signer key store.
    timeoutDeltaMilliseconds: 1500                                                         # Amount of milliseconds to add/subtract from OCSP timeout during the test to get a result inside/outside the timeout.
    gracePeriodExtraDelay: 5                                                               # Amount of seconds to add to the OCSP grace period as a buffer.

  tslSettings:
    initialStateTslImport: true                                                            # Import a new TSL during initial state in each use case.
    signer: "./testDataTemplates/certificates/ecc/trustAnchor/TSL-Signing-Unit-8-TEST-ONLY.p12" # Absolute or relative path to key store in p12 format to sign TSLs with.
    signerPassword: "00"                                                                   # Password used for the TSL signer key store.
