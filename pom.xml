<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.0</version>
  </parent>

  <groupId>de.gematik.pki.pkits</groupId>
  <artifactId>pki-testsuite</artifactId>
  <version>2.3.1</version>
  <packaging>pom</packaging>
  <name>PKI Testsuite</name>
  <description>PKI Testsuite to test products of the telematic infrastructure to fulfill the
    gemSpec_PKI specification. This test suite is used for approval tests of different products like
    Intermedi√§r, VSDM Fachdienst, VPNZugD, IDP FD, KIM-FD, etc.</description>
  <url>https://github.com/gematik/app-PkiTestsuite</url>

  <organization>
    <name>gematik GmbH</name>
    <url>https://www.gematik.de</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>gematik</name>
      <email>software-development@gematik.de</email>
      <url>https://gematik.github.io/</url>
      <organization>gematik GmbH</organization>
      <organizationUrl>https://www.gematik.de/</organizationUrl>
    </developer>
  </developers>
  <modules>
    <module>pkits-common</module>
    <module>pkits-sut-server-sim</module>
    <module>pkits-ocsp-responder</module>
    <module>pkits-tsl-provider</module>
    <module>pkits-tls-client</module>
    <module>pkits-tsl-generator</module>
    <module>pkits-testsuite</module>
    <module>pkits-coverage-reports</module>
    <module>pkits-distro-assembly</module>
  </modules>

  <scm>
    <connection>scm:git:git://github.com/gematik/app-pkits.git</connection>
    <developerConnection>scm:git:ssh://git@github.com:gematik/app-pkits.git</developerConnection>
    <url>https://github.com/gematik/app-pkits</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/gematik/app-pkits/issues</url>
  </issueManagement>

  <properties>
    <!-- NOTE: update it periodically - manually set version of a transitive dependency used by spring boot-->
    <snakeyaml.version>2.0</snakeyaml.version>

    <!-- header-->
    <skip.dockerbuild>true</skip.dockerbuild>

    <docker.registry.gematik>eu.gcr.io/gematik-all-infra-prod</docker.registry.gematik>
    <docker.image.name.pkits-ocsp-responder>${docker.registry.gematik}/pkits/pkits-ocsp-responder</docker.image.name.pkits-ocsp-responder>
    <docker.image.name.pkits-tsl-provider>${docker.registry.gematik}/pkits/pkits-tsl-provider</docker.image.name.pkits-tsl-provider>
    <docker.image.name.pkits-sut-server-sim>${docker.registry.gematik}/pkits/pkits-sut-server-sim</docker.image.name.pkits-sut-server-sim>

    <version.java>17</version.java>
    <version.maven>3.6.3</version.maven>
    <!-- for Spring boot -->
    <java.version>${version.java}</java.version>

    <project.build.releaseJarsDir>${project.basedir}/../bin/</project.build.releaseJarsDir>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
    <maven.compiler.encoding>${project.build.sourceEncoding}</maven.compiler.encoding>

    <!-- dependencies -->
    <version.ardikars.pcap>1.5.1</version.ardikars.pcap>
    <version.assertj-core>3.24.2</version.assertj-core>
    <version.awaitility>4.2.0</version.awaitility>
    <version.bouncycastle>1.77</version.bouncycastle>
    <version.commons-compress>1.25.0</version.commons-compress>
    <version.commons-io>2.15.1</version.commons-io>
    <version.commons-text>1.11.0</version.commons-text>
    <version.jfiglet>1.0.1</version.jfiglet>
    <version.gemLibPki>2.0.3</version.gemLibPki>
    <version.jackson>2.16.0</version.jackson>
    <version.jakarta.activation-api>2.1.2</version.jakarta.activation-api>
    <version.jakarta.validation-api>3.0.2</version.jakarta.validation-api>
    <version.jakarta.xml.bind-api>4.0.1</version.jakarta.xml.bind-api>
    <version.jaxb-api>2.4.0-b180830.0359</version.jaxb-api>
    <version.jaxb-impl>2.3.6</version.jaxb-impl>
    <version.junit-jupiter>5.10.1</version.junit-jupiter>
    <version.junit-platform-launcher>1.10.1</version.junit-platform-launcher>
    <version.log4j2>2.22.0</version.log4j2>
    <version.lombok>1.18.30</version.lombok>
    <version.openapi>2.3.0</version.openapi>
    <version.unirest-java>3.14.5</version.unirest-java>
    <version.xmlunit>2.9.1</version.xmlunit>

    <!--  plugins -->
    <version.dependency-check-maven>7.2.1</version.dependency-check-maven>
    <version.docker-maven-plugin>0.43.4</version.docker-maven-plugin>
    <version.git-commit-id-maven-plugin>7.0.0</version.git-commit-id-maven-plugin>
    <version.jacoco-maven-plugin>0.8.11</version.jacoco-maven-plugin>
    <version.maven-assembly-plugin>3.6.0</version.maven-assembly-plugin>
    <version.maven-clean-plugin>3.3.2</version.maven-clean-plugin>
    <version.maven-compiler-plugin>3.11.0</version.maven-compiler-plugin>
    <version.maven-deploy-plugin>3.1.1</version.maven-deploy-plugin>
    <version.maven-enforcer-plugin>3.4.1</version.maven-enforcer-plugin>
    <version.maven-failsafe-plugin>${version.maven-surefire-plugin}</version.maven-failsafe-plugin>
    <version.maven-project-info-reports-plugin>3.5.0</version.maven-project-info-reports-plugin>
    <version.maven-resources-plugin>3.3.0</version.maven-resources-plugin>
    <version.maven-site-plugin>3.12.1</version.maven-site-plugin>
    <version.maven-source-plugin>3.3.0</version.maven-source-plugin>
    <version.maven-surefire-plugin>3.2.3</version.maven-surefire-plugin>
    <version.sonar-maven-plugin>3.10.0.2594</version.sonar-maven-plugin>
    <version.spotless-maven-plugin>2.41.1</version.spotless-maven-plugin>
    <version.spotless.google-java-format>1.17.0</version.spotless.google-java-format>

    <!-- settings for upload to sonar server -->
    <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../pkits-coverage-reports/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.dependencyCheck.htmlReportPath>${project.build.directory}/dependency-check-report.html</sonar.dependencyCheck.htmlReportPath>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.language>java</sonar.language>

  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${version.openapi}</version>
      </dependency>

      <!-- NOTE check regularly: it is an upgraded version of a dependency of xades4j->guice remove it when xades4j is upgraded -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>32.1.3-jre</version>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${version.assertj-core}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${version.awaitility}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk18on</artifactId>
        <version>${version.bouncycastle}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk18on</artifactId>
        <version>${version.bouncycastle}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bctls-jdk18on</artifactId>
        <version>${version.bouncycastle}</version>
      </dependency>

      <dependency>
        <groupId>de.gematik.pki</groupId>
        <artifactId>gemLibPki</artifactId>
        <version>${version.gemLibPki}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.validation</groupId>
        <artifactId>jakarta.validation-api</artifactId>
        <version>${version.jakarta.validation-api}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${version.jaxb-api}</version>
      </dependency>
      <!-- old JAXB implementation for non jakarta binding -->
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${version.jaxb-impl}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${version.commons-compress}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${version.commons-io}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${version.commons-text}</version>
      </dependency>

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${version.junit-jupiter}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${version.junit-jupiter}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${version.junit-jupiter}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-commons</artifactId>
        <version>${version.junit-platform-launcher}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-engine</artifactId>
        <version>${version.junit-platform-launcher}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${version.log4j2}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${version.log4j2}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j2-impl</artifactId>
        <version>${version.log4j2}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${version.lombok}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pkits-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pkits-ocsp-responder</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pkits-sut-server-sim</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pkits-testsuite</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pkits-tsl-provider</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pkits-tls-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pkits-tsl-generator</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.konghq</groupId>
        <artifactId>unirest-java</artifactId>
        <version>${version.unirest-java}</version>
      </dependency>

      <dependency>
        <groupId>com.ardikars.pcap</groupId>
        <artifactId>pcap</artifactId>
        <version>${version.ardikars.pcap}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>${version.jakarta.xml.bind-api}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.activation</groupId>
        <artifactId>jakarta.activation-api</artifactId>
        <version>${version.jakarta.activation-api}</version>
      </dependency>

      <dependency>
        <groupId>com.github.dtmo.jfiglet</groupId>
        <artifactId>jfiglet</artifactId>
        <version>${version.jfiglet}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${version.maven-assembly-plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${version.maven-clean-plugin}</version>
        </plugin>
        <plugin>
          <groupId>io.github.git-commit-id</groupId>
          <artifactId>git-commit-id-maven-plugin</artifactId>
          <version>${version.git-commit-id-maven-plugin}</version>
          <configuration>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
            <includeOnlyProperties>
              <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
              <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
            </includeOnlyProperties>
            <commitIdGenerationMode>full</commitIdGenerationMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${version.maven-site-plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${version.maven-project-info-reports-plugin}</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${version.maven-deploy-plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.maven-surefire-plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${version.maven-surefire-report-plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${version.jacoco-maven-plugin}</version>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${version.docker-maven-plugin}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>./bin</directory>
              <includes>
                <include>**</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>./out/logs</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>jacoco-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>surefire.jacoco.args</propertyName>
              <append>true</append>
            </configuration>
          </execution>
          <execution>
            <id>unit-test-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.maven-compiler-plugin}</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${version.java}</source>
          <target>${version.java}</target>
          <debug>true</debug>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${version.maven-enforcer-plugin}</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${version.maven}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${version.java}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${version.maven-source-plugin}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${surefire.jacoco.args}</argLine>
        </configuration>
      </plugin>

      <!-- to upload jacoco results to sonar server via mvn sonar:sonar-->
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${version.sonar-maven-plugin}</version>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${version.spotless-maven-plugin}</version>
        <configuration>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>**/*.yml</include>
                <include>.gitignore</include>
              </includes>
              <excludes>
                <exclude>**/target/**/*</exclude>
              </excludes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <spaces>true</spaces>
                <spacesPerTab>2</spacesPerTab>
              </indent>
            </format>
          </formats>

          <!-- define a language-specific format -->
          <pom>
            <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven#maven-pom -->
            <!-- https://github.com/Ekryd/sortpom/wiki/Parameters -->
            <includes>
              <include>pom.xml</include>
            </includes>
            <sortPom>
              <encoding>UTF-8</encoding>
              <expandEmptyElements>false</expandEmptyElements>
              <nrOfIndentSpace>2</nrOfIndentSpace>
              <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
            </sortPom>
          </pom>
          <java>
            <toggleOffOn/>
            <googleJavaFormat>
              <version>${version.spotless.google-java-format}</version>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
            </googleJavaFormat>
            <licenseHeader>
              <file>LICENSE_PLACEHOLDER</file>
            </licenseHeader>
          </java>
          <groovy>
            <includes>
              <include>**/*.Jenkinsfile</include>
            </includes>
            <importOrder/>
          </groovy>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <excludes>
              <exclude>**/target/**/*</exclude>
              <exclude>**/src/site/markdown/*</exclude>
            </excludes>
          </markdown>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
